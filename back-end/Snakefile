import json

with open("./config.json", "r") as fi:
    config = json.load(fi)


VAD_STRING = "data/processed/{game}/{period}/matchmeta.parquet"
OUTPUT_STRING = "outputs/{game}/{period}/{filter}/output.log"

VADS = []
OUTPUTS = []
GAMES = config.keys()
for game in GAMES:
    FILTERS = config[game]["filters"].keys()
    PERIODS = config[game]["periods"].keys()
    VADS += expand(VAD_STRING, game = GAMES, period = PERIODS)
    OUTPUTS += expand(OUTPUT_STRING, game = GAMES, period = PERIODS, filter = FILTERS)


rule all:
    input:
        OUTPUTS


rule db:
    shell: "python3.9 ./scripts/db_update.py"


rule clean:
    shell:
        """
        rm -rf data/processed/*
        rm -rf outputs/*
        """


rule killr:
    shell:
        """
        kill -9 $(ps -u root | awk '$4=="R" {{ printf "%s ", $1 }}')
        """





rule patchmeta:
    output: "data/processed/patchmeta.json"
    input: "scripts/ad_patchmeta.py"
    shell: "python3.9 {input[0]}"


###### VADs

rule all_vads:
    input: VADS

rule:
    output: "data/processed/{game}/{period}/matchmeta.parquet"
    input: "scripts/ad_ana.R", "data/processed/patchmeta.json"
    shell: "Rscript {input[0]} {wildcards.game} {wildcards.period}"


###### Outputs

rule all_outputs:
    input: OUTPUTS

rule:
    output: "outputs/{game}/{period}/{filter}/output.log"
    input: "scripts/outputs.R", "data/processed/{game}/{period}/matchmeta.parquet"
    shell: "Rscript {input[0]} {wildcards.game} {wildcards.period} {wildcards.filter}"
